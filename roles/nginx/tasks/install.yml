---
- name: Compile Nginx from source with sticky module - Step 1/3
  shell: "./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx --user=nginx --group=nginx --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-http_perl_module=dynamic --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-google_perftools_module --with-debug --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' --with-ld-opt='-Wl,-z,relro -Wl,-E'"
  args:
    chdir: "{{ download_path }}/nginx-{{ nginx_version }}"
  register: nginx_configure

- name: Compile Nginx from source - Step 2/3
  shell: "make"
  args:
    chdir: "{{ download_path }}/nginx-{{ nginx_version }}"
  register: nginx_make

- name: Compile Nginx from source - Step 3/3
  shell: "make install"
  args:
    chdir: "{{ download_path }}/nginx-{{ nginx_version }}"
  register: nginx_make_install

- name: Copy nginx config files
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: '0600'
  with_items:
    - 'etc/nginx/nginx.conf'
    - 'etc/nginx/sites-enabled/00-default.conf'
    - 'etc/systemd/system/nginx.service'

- name: Copy index.html nginx to /var/www/nginx/index.html
  template:
    src: "{{ item }}"
    dest: "/{{ item }}"
    owner: nginx
    group: nginx
    mode: '0600'
  with_items:
    - 'var/www/nginx/index.html'

- name: Create a directory if it does not exist
  file:
    path: "{{ item }}"
    state: directory
    owner: nginx
    group: nginx
    mode: '0755'
  with_items:
    - '/var/nginx/client_body_temp'
    - '/var/nginx/proxy_temp'

- name: Create ssl folder in /etc/nginx
  file:
    path: "/etc/nginx/ssl"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Generate DHparm PEM -- this will take a while to complete!
  shell: "openssl dhparam -out /etc/nginx/dhparam.pem 2048"

- name: Enable nginx service | nginx
  systemd:
    name: nginx
    state: restarted
    enabled: yes