---
- name: Determine if the user {{ domain_username }} exist.
  shell: grep {{ domain_username }} /etc/passwd |  awk -F":" '{print $3}'
  changed_when: false
  register: existing_user_domain

- name: Determine if the group {{ domain_username }} exist.
  shell: grep {{ domain_username }} /etc/group |  awk -F":" '{print $3}'
  changed_when: false
  register: existing_group_domain

- name: Fail if Group/User {{ domain_username }} exist
  fail:
    msg: "Fail Group/User {{ domain_username }} exists on this server."
  when: existing_user_domain.stdout != "" and existing_group_domain.stdout != ""

- set_fact:
    domain_username_id: "{{ range(3100,3299) | random }}"
    until: domain_username_id not in domain_username_id_remind

- set_fact:
    domain_username_remind: "{{ domain_username_id }}"

- name:  Generate UID & GUID
  block:
  - name: Determine if the user id {{ domain_username_id }} exists.
    shell: grep {{ domain_username_id }} /etc/passwd |  awk -F":" '{print $3}'
    changed_when: false
    register: existing_user
  - name: Determine if the group id {{ domain_username_id }} exists.
    shell: grep {{ domain_username_id }} /etc/group |  awk -F":" '{print $3}'
    changed_when: false
    register: existing_group
  - name: Fail if GUID/UID exist
    fail:
      msg: "Fail GUID {{ domain_username_id }} / UID {{ domain_username_id }} exists on this server."
    when: existing_group.stdout != "" and existing_user.stdout != ""
  # - debug:
  #     msg: "{{ domain_username_id }}"
  rescue:
    - include_role: { role: domains }